# -*- coding: utf-8 -*-
#
# KnowledgeBuilder Python API documentation build configuration file, created by
# sphinx-quickstart on Tue Nov 18 11:04:56 2014.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

from datetime import date
import sys
import os

sys.path.append(os.path.abspath("./exts"))


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
basepath = os.path.join(
    os.path.dirname(os.path.abspath(__file__)), ".."
)  # top-level directory
mathjax_path = (
    "https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"
)
sensiml_server_path = os.getenv("SENSIML_SERVER_DEPLOY_HOME")


if sensiml_server_path:

    import django

    print(sensiml_server_path)
    sys.path.insert(0, os.path.join(sensiml_server_path, "../python_client"))
    sys.path.insert(0, os.path.join(sensiml_server_path))
    print(sys.path)
    os.environ["DJANGO_SETTINGS_MODULE"] = "server.settings"
    django.setup()

# -- General configuration ------------------------------------------------
DOCUMENTATION_NAME = "SensiML Toolkit Documentation"

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.napoleon",
    "sphinx.ext.mathjax",
    "nbsphinx",
    "sphinx.ext.autosectionlabel",
    "sphinx_reredirects",
]

# END sphinxcontrib.confluencebuilder settings

autosectionlabel_prefix_document = True
autosectionlabel_maxdepth = 1

# Add any paths that contain templates here, relative to this directory.
templates_path = []

# The suffix of source filenames.
source_suffix = ".rst"

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "SensiML Toolkit"
copyright = "2022, SensiML Corporation. All rights reserved"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.

# today = date.today()

version = date.today().strftime("%Y.%m.%d")

# The full version, including alpha/beta/rc tags.
release = date.today().strftime("%Y.%m.%d")

rst_epilog = ".. |sensiml| replace:: %s" % "SensiML-2020.1.x-py3-none-any.whl"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["**.ipynb_checkpoints"]

autodoc_warningiserror = True

# The reST default role (used for this markup: `text`) to use for all
# documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# .wy-nav-content {
#    padding: 1.618em 3.236em;
#    height: 100%;
#    max-width: 1200px;
# -- Options for HTML output ----------------------------------------------


# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = "sphinx_rtd_theme"

html_css_files = [
    "my_theme.css",
    "jupyter_styles.css",
]  # override wide tables in RTD theme

html_theme_options = {"body_max_width": "1200px"}

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {
#     'html_show_sourcelink': False,
# }

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = "SensiML Documentation"

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
# html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
# html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = "SensiMLAnalyticSuite"

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    "preamble": r"""
\usepackage{eso-pic}
\definecolor{blue}{RGB}{47,84,150}
\usepackage{titlesec}
\titleformat{\chapter}[display]
  {\normalfont\sffamily\huge\bfseries\color{blue}}
  {\thechapter}{20pt}{\Huge}
\titleformat{\section}
  {\normalfont\sffamily\Large\bfseries\color{blue}}
  {\thesection}{12pt}{}
\titleformat{\subsection}
  {\normalfont\sffamily\Large\bfseries\color{blue}}
  {\thesubsectionsection}{8pt}{}
\documentclass[openany]{book}

  """,
    "figure_align": "H",
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        "guides/getting-started/index",
        "SensiMLAnalyticSuite.tex",
        DOCUMENTATION_NAME,
        "SensiML",
        "manual",
    )
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", "SensiMLAnalyticSuite", DOCUMENTATION_NAME, ["SensiML"], 1)]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        "index",
        "SensiMLAnalyticSuite",
        DOCUMENTATION_NAME,
        "SensiMLAnalyticSuite",
        "One line description of project.",
        "Miscellaneous",
    )
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False

# pdf info
pdf_documents = [("index", "SensiMLAnalyticSuite", DOCUMENTATION_NAME, "SensiML")]
pdf_use_index = False

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {"http://docs.python.org/": None}

redirects = {
    "./guides/analytics-studio/building-a-model": "../../analytics-studio/building-a-model.html",
    "./guides/analytics-studio/exploring-model-details": "../../analytics-studio/exploring-model-details.html",
    "./guides/analytics-studio/generating-a-knowledge-pack": "../../analytics-studio/generating-a-knowledge-pack.html",
    "./guides/analytics-studio/index": "../../analytics-studio/index.html",
    "./guides/analytics-studio/overview": "../../analytics-studio/overview.html",
    "./guides/analytics-studio/project-summary": "../../analytics-studio/project-summary.html",
    "./guides/analytics-studio/query-data": "../../analytics-studio/query-data.html",
    "./guides/analytics-studio/testing-a-model-using-the-analytics-studio": "../../analytics-studio/testing-a-model-using-the-analytics-studio.html",
    "./data-capture-lab/adding-custom-device-firmware": "../data-studio/adding-custom-device-firmware.html",
    "./data-capture-lab/automated-labeling-tools": "../data-studio/automated-labeling-tools.html",
    "./data-capture-lab/data-collection-overview": "../data-studio/data-collection-overview.html",
    "./data-capture-lab/dcli-import-format": "../data-studio/dai-import-format.html",
    "./data-capture-lab/flashing-data-collection-firmware": "../data-studio/flashing-data-collection-firmware.html",
    "./data-capture-lab/importing-external-sensor-data": "../data-studio/importing-external-sensor-data.html",
    "./data-capture-lab/importing-python-models": "../data-studio/importing-python-models.html",
    "./data-capture-lab/importing-transforms": "../data-studio/importing-transforms.html",
    "./data-capture-lab/index": "../data-studio/index.html",
    "./data-capture-lab/installation-setup-instructions": "../data-studio/installation-setup-instructions.html",
    "./data-capture-lab/labeling-events-of-interest": "../data-studio/labeling-events-of-interest.html",
    "./data-capture-lab/labeling-sensor-data-overview": "../data-studio/labeling-sensor-data-overview.html",
    "./data-capture-lab/overview": "../data-studio/overview.html",
    "./data-capture-lab/playing-videos": "../data-studio/playing-videos.html",
    "./data-capture-lab/project-management-overview": "../data-studio/project-management-overview.html",
    "./data-capture-lab/real-time-data-collection": "../data-studio/real-time-data-collection.html",
    "./data-capture-lab/release-notes": "../data-studio/release-notes.html",
    "./data-capture-lab/setting-up-labels-and-metadata-in-a-project": "../data-studio/setting-up-labels-and-metadata-in-a-project.html",
    "./data-capture-lab/streaming-over-wifi": "../data-studio/streaming-over-wifi.html",
    "./data-capture-lab/syncing-videos": "../data-studio/syncing-videos.html",
    "./data-capture-lab/testing-a-model-using-the-data-capture-lab": "../data-studio/testing-a-model-using-the-data-studio.html",
    "./data-capture-lab/types-of-events": "../data-studio/types-of-events.html",
    "./guides/getting-started/running-a-model-in-the-data-capture-lab": "../../guides/getting-started/running-a-model-in-the-data-studio.html",
    "./guides/getting-started/data-capture-lab": "../../guides/getting-started/data-studio.html",
    "./knowledge-packs/running-a-model-in-the-data-capture-lab": "../knowledge-packs/running-a-model-in-the-data-studio.html",
}
